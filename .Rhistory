power.t.test(power = .8, delta = 2, sd=4, type = "one.sample", alt = "one.sided")$n
1
power.t.test(power = .8, delta = 100 , sd=200, type = "one.sample", alt = "one.sided")$n
1
power.t.test(power = .8, n=26, sd=1, type = "one.sample", alt = "one.sided")$delta
1
power.t.test(power = .8, n=27, sd=1, type = "one.sample", alt = "one.sided")$delta
1
head(pValues)
1
sum(pValues < 0.05)
1
sum(p.adjust(pValues,method="bonferroni") < 0.05)
1
sum(p.adjust(pValues,method="BH") < 0.05)
1
tail(trueStatus)
1
table(pValues2 < 0.05, trueStatus)
1
24/500
1
table(p.adjust(pValues2,method="bonferroni") < 0.05, trueStatus)
1
table(p.adjust(pValues2,method="BH") < 0.05, trueStatus)
1
sum(1:6)/6
1
1
print(g2)
3
head(sh)
1
nh
1
median(resampledMedians)
1
median(sh)
1
sam <- sample(fh,nh*B,replace=TRUE)
1
resam <- matrix(sam,B,nh)
1
meds <- apply(resam,1,median)
1
median(meds)-median(fh) or median(fh)-median(meds)
1
median(meds)-median(fh) or median(fh)-median(meds)
median(meds)-median(fh)
1
sd(meds)
1
sd(resampledMedians)
1
quantile(resampledMedians,c(.025,.975))
1
quantile(meds,c(.025,.975))
1
dim(InsectSprays)
1
names(InsectSprays)
1
range(Bdata$count)
1
range(Cdata$count)
1
BCcounts
1
group
1
testStat
1
obs <- testStat(BCcounts,group)
1
obs
1
mean(Bdata$count)-mean(Cdata$count)
1
sample(group)
1
perms <- sapply(1 : 10000, function(i) testStat(BCcounts, sample(group)))
1
mean(perms>obs)
1
testStat(DEcounts,group)
1
perms <- sapply(1 : 10000, function(i) testStat(DEcounts, sample(group)))
library(swirl)
swirl()
1
getwd()
1
ls()
1
x <- 9
1
ls()
1
list.files()
1
?list.files
1
args(list.files)
1
old.dir <- getwd()
1
dir.create("testdir")
1
setwd("testdir")
1
file.create("mytest.R")
1
list.files()
1
file.exists("mytest.R")
1
file.info("mytest.R")
1
file.rename("mytest.R", "mytest2.R")
1
file.copy("mytest2.R", "mytest3.R")
1
file.path("mytest3.R")
1
file.path("folder1", "folder2")
1
?dir.create
1
dir.create(file.path('testdir2', 'testdir3'),
| recursive = TRUE)
dir.create(file.path('testdir2', 'testdir3'),
recursive = TRUE)
1
setwd(old.dir)
1
1:20
1
pi:10
1
15:1
1
1
?`:`
1
seq(1, 20)
1
seq(0, 10, by=0.5)
1
my_seq <- seq(5, 10,
length=30)
1
length(my_seq)
1
1:length(my_seq)
1
seq(along.with = my_seq)
1
seq_along(my_seq)
1
rep(0, times = 40)
1
rep(c(0, 1, 2), times = 10)
1
rep(c(0, 1, 2), each = 10)
1
num_vect<-c(0.5,55,-10,6)
1
tf <- num_vect < 1
1
tf
1
num_vect >= 6
1
my_char <- c("My", "name", "is")
1
1
my_char
1
paste(my_char, collapse = " ")
1
type my_name <- c(my_char, "Swirl")
type my_name <- c(my_char, "Swirl")
my_name <- c(my_char, "Swirl")
1
my_name
1
paste(my_name, collapse = " ")
1
paste("Hello", "world!", sep = " ")
1
paste(1:3, c("X", "Y", "Z"), sep = "")
1
paste(LETTERS, 1:4, sep = "-")
1
x
1
x[1:10]
1
x[is.na(x)]
1
y <- x[!is.na(x)]
1
y
y[y > 0]
1
x[x > 0]
1
x[!is.na(x) & x > 0]
1
c(3, 5, 7)
[c(3, 5, 7)]
c(3, 5, 7)[]
c(3, 5, 7)
x[c(3,5,7)]
1
x[â€¢0]
x[0]
1
x[3000]
1
x[c(-2, -10)]
1
x[-c(2, 10)]
1
vect <- c(foo = 11,
bar = 2, norf = NA)
1
vect
1
names(vect)
1
vect2<-c(11, 2, NA)
1
names(vect2) <-
c("foo", "bar", "norf")
1
identical()
identical(vect2)
identical(vect2,vect2)
1
identical(vect2,vect)
1
vect["bar"]
1
vect[c("foo", "bar")]
1
my_vector<-1:3
1
my_vector<c(1, 2, 3)
my_vector<1:3
my_vector<1:20
my_vector<- 1:20
1
my_vector
dim(my_vector)
1
length(my_vector)
1
dim(my_vector) <- c(4, 5)
1
dim(my_vector)
1
attributes(my_vector)
1
my_vector
class(my_vector)
1
my_matrix <- my_vector
1
?matrix
1
matrix(1:20,1,20)
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
1
identical(my_matrix, my_matrix2)
1
patients <- c("Bill", "Gina", "Kelly", "Sean")
1
cbind(patients, my_matrix)
1
my_data <- data.frame(patients,
my_matrix)
1
my_data
1
my_data <- data.frame(patients, my_matrix)
class(my_data)
1
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
1
colnames(my_data) <- cnames
1
my_data
1
x
1
x<-c(44, NA, 5, NA)
3*x
1
y <-
rnorm(1000)
1
z <- rep(NA, 1000)
1
my_data
<- sample(c(y, z), 100)
my_data
<- sample(c(y, z), 100)
my_data<- sample(c(y, z), 100)
1
my_na<- is.na(my_data)
1
my_na
1
my_data == NA
1
sum(my_na)
my_data
1
0/0
1
Inf - Inf
1
TRUE == TRUE
1
(FALSE == TRUE) == FALSE
1
6 == 7
1
6 < 7
1
10 <= 10
1
5 != 7
1
5 == 7
!(5 == 7)
1
FALSE & FALSE
1
TRUE & c(TRUE, FALSE, FALSE)
1
TRUE & c(TRUE, FALSE, FALSE)
1
TRUE && c(TRUE, FALSE,
FALSE)
1
TRUE | c(TRUE, FALSE, FALSE)
1
TRUE || c(TRUE, FALSE, FALSE)
1
5 > 8 || 6 != 8 && 4 > 3.9
1
isTRUE(6 > 4)
identical('twins', 'twins')
1
xor(5 == 6, !FALSE)
1
ints <- sample(10)
1
ints
ints > 5
1
ints > 7
1
which(ints > 7)
1
any(ints < 0)
1
all(ints > 0)
1
Sys.Date()
1
mean(c(2, 4, 5))
1
submit()
boring_function('My first
function!')
boring_function('My first function!')
1
boring_function
submit()
1
my_mean(c(4, 5, 10))
submit()
1
remainder(5)
1
remainder(11, 5)
1
remainder(divisor = 11, num = 5)
1
remainder(4, div = 2)
1
args(remainder)
submit()
1
sd(c(1.4, 3.6, 7.9, 8.8))
1
1
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
1
x
evaluate(function(x){x[1]}, c(8, 4, 0))
1
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
1
?paste
1
paste("Programming", "is", "fun!")
submit()
1
telegram
1
telegram()
submit()
1
mad_libs()
submit()
1
'I' %p% 'love' %p% 'R!'
1
d1 <- Sys.Date()
1
class(d1)
1
unclass(d1)
1
d1
1
d2 <- as.Date("1969-01-01")
1
unclass(d2)
1
t1 <- Sys.time()
1
t1
1
class(t1)
1
1
unclass(t1)
1
t2 <- as.POSIXlt(Sys.time())
1
class(t2)
1
t2
1
unclass(t2)
1
str(unclass(t2))
1
t2$min
1
weekdays(d1)
1
months(t1)
1
quarters(t2)
1
t3<-"October 17, 1986 08:24"
1
t4 <- strptime(t3, "%B %d, %Y %H:%M")
1
t4
1
class(t4)
1
Sys.time() > t1
1
Sys.time() - t1
1
difftime(Sys.time(), t1, units = 'days')
0
0
head(flags)
1
0
quit
info()
by()
0
bye()
run_analysis
run_analysis()
setwd("UCI HAR Dataset") # Working dir
AS <- c(562, 563)        # To keep activitys and subjects
# Labels the data with descriptive variable names
names   <- read.table("features.txt")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip",
destfile="data.zip",
method="wget")
setwd("UCI HAR Dataset") # Working dir
dir()
AS <- c(562, 563)        # To keep activitys and subjects
source('C:/Users/razon/Dropbox/DataScience/Git/GaCD_CP/run_analysis.R', echo=TRUE)
cd ..
cd..
dir
dir()
setwd("c:\Users\razon\Dropbox\DataScience\Git\GaCD_CP\")
setwd(c:\Users\razon\Dropbox\DataScience\Git\GaCD_CP\)
setwd("c:\Users\razon\Dropbox\DataScience\Git\GaCD_CP\")
setwd("c:/Users/razon/Dropbox/DataScience/Git/GaCD_CP")
dir()
source('C:/Users/razon/Dropbox/DataScience/Git/GaCD_CP/run_analysis.R', echo=TRUE)
file.copy("TiddySet.txt","../TiddySet.txt")
setwd("c:/Users/razon/Dropbox/DataScience/Git/GaCD_CP")
dir()
source('C:/Users/razon/Dropbox/DataScience/Git/GaCD_CP/run_analysis.R', echo=TRUE)
